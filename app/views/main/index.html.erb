<style>
    /* body {
        padding: 0;
        margin: 0;
        color:#1a1a1c;
            font-size: 1rem;
    font-weight: 500;
    line-height: 2;
    letter-spacing: 0.16px;
        box-sizing: border-box;
        overflow: scroll;
  -ms-overflow-style: none;   
  scrollbar-width: none;      
  -webkit-text-size-adjust: none;
  overflow-x: hidden;
    min-height: 100%;
      font-family: 'PT Sans';


}
body * {
        text-shadow: none;

} */
ul, ol {
  list-style: none;
  text-decoration: none;
  margin: 0;
  padding: 0;
}

.none {
    display:none;
}
.block {
    display:initial;
}

/* button {
    border:none;
    outline:none;
    background:transparent;
    cursor:pointer;
  text-wrap: balance;
  word-break: auto;
  overflow-wrap: break-word;
} */
/* 
.item {
    padding-left:0.5em;
    border-left:5px solid rgb(226,227,229);
    border-radius:2px;
} */

#error {
    position:fixed;
    top:0;
    left:0;
    margin:0;
    padding:1em;
    background-color:rgba(255,0,0,0.5);
    text-align:center;
    font-weight:bold;
    width:100%;
}

#header {
    display:flex;
    background:#fcfdff;
  align-items: center;
}

#tab {
    display:flex;
    background-color:#d3e3fd;
    height:3em;
}
#videos {
    display:flex;
    margin-left:auto;
    margin-right:1em;
  place-items: center;
}

/* #createButton , .reload{
    width:4em;
    height:4em;
    border-radius:5em;
    transition: all 0.2s  ease-in;
}
#createButton {
    margin-left:0.6em;
} */
.reload img{
    width:2.5em;
    height:2.5em;
    margin:0 auto;
}

#createButton img {
    width:3em;
    height:3em;
    margin:0 auto;
    padding:0;
}

#createButton:hover , .reload:hover , .prev_button:hover , .next_button:hover{
    background:#f2f2f2;
}
/* 
#url {
    width:20em;
    height:25px;
    font-size:20px;
    border-radius:15px;
    outline:none;
    border:none;
    background:#fff;
    border:3px solid #cdcdcd;
    padding:5px;
    margin:1em;
    margin-right:0;
    padding-left:10px;
}
#url:hover {
    background:#f2f2f2;
}
#url:focus {
    background:#fff;
    border:3px solid #2e6fd7;
} */

/* #submitButton {
    display: block;
	text-align: center;
	text-decoration: none;
	width: 4em;
    height:4em;
	padding: 1vh ;
    margin:1em;
	font-weight: bold;
	border: 2px solid #27acd9;
	background: #27acd9;
	color: #fff;
	border-radius: 100vh;
	transition: 0.5s;
}

#submitButton:hover {
	color: #27acd9;
	background: #fff;
} */

#text {
    width:15em;
    height:1em;
    font-size:15px;
    border-radius:10px;
    outline:none;
    border:none;
    background:#fff;
    border:2px solid #cdcdcd;
    padding:5px;
    padding-left:10px;
}
/* #sleep {
    width:5em;
    height:1em;
    font-size:15px;
    border-radius:10px;
    outline:none;
    border:none;
    background:#fff;
    border:2px solid #cdcdcd;
    padding:5px;
    padding-left:10px;
}

#text:focus ,#sleep:focus{
    border:3px solid #444;
} */
.prev_button , .next_button {
    width:4em;
    height:4em;
    margin:1em;
    border-radius:5em;
    transition: all 0.2s  ease-in;
}
.prev_arrow{
  display: inline-block;
  vertical-align: middle;
  color: #333;
  line-height: 1;
  position: relative;
  width: 2.5em;
  height: 0.4em;
  border-radius:5px;
  background: currentColor;
}

.prev_arrow::before{
  content: '';
  width: 1.5em;
  height: 1.5em;
  border: 0.5em solid currentColor;
  border-right: 0;
  border-bottom: 0;
  transform: rotate(-45deg);
  transform-origin: top left;
  position: absolute;
  top: 50%;
  left: -0.05em;
  box-sizing: border-box;
}

.next_arrow {
  display: inline-block;
  vertical-align: middle;
  color: #333;
  line-height: 1;
  position: relative;
  width: 2.5em;
  height: 0.4em;
  border-radius:5px;
  background: currentColor;
}

.next_arrow::before {
  content: '';
  width: 1.5em;
  height: 1.5em;
  border: 0.5em solid currentColor;
  border-left: 0;
  border-bottom: 0;
  transform: rotate(45deg);
  transform-origin: top right;
  position: absolute;
  top: 50%;
  right: -0.05em;
  box-sizing: border-box;
}

#imgbox {
    position:relative;
    height:85vh;
    border:2px solid #cdcdcd;
    overflow-y:scroll;
    overflow-x:hidden;
    -ms-overflow-style: none;
    scrollbar-width: none;
}
/* #imgbox::-webkit-scrollbar {
    display: none;
} */


#img {
    width:100%;
    height:auto;
}

.scroll {
    display:inline-block;
    position:sticky;
    top:0;
    color:#444;
    padding:0;
    margin:0;
}

#video {
    position:absolute;
    top:1032px;
    height:85vh;
    width:auto;
}

.pointer {
    /* width:20px;
    height:20px; */
    color:black;
    border-radius:5px;
    background-color:red;
    text-align:center;
    opacity:0.5;
}

.submit {
    display:inline-block;
	text-align: center;
	vertical-align: middle;
	text-decoration: none;
	width: 10em;
	margin: auto;
	padding: 1vh;
	font-weight: bold;
	border: 2px solid #27acd9;
	background: #27acd9;
	color: #fff;
	border-radius: 100vh;
	transition: 0.5s;
    cursor:pointer;
}
.submit:hover {
    	color: #27acd9;
	background: #fff;
}

body::-webkit-scrollbar {  /* Chrome, Safari 対応 */
  display:none;
}
/* section {
    margin-left:auto;
    margin-right:1em;
} */
.btn-trigger {
    position: relative;
    width: 50px;
    height: 44px;
    cursor: pointer;
  }
  .btn-trigger span {
    position: absolute;
    left: 0;
    width: 100%;
    height: 4px;
    background-color: #444;
    border-radius: 4px;
  }
  .btn-trigger, .btn-trigger span {
    display: inline-block;
    transition: all .5s;
    box-sizing: border-box;
  }
  .btn-trigger span:nth-of-type(1) {
    top: 0;
  }
  .btn-trigger span:nth-of-type(2) {
    top: 20px;
  }
  .btn-trigger span:nth-of-type(3) {
    bottom: 0;
  }

#menu.active {
  -webkit-transform: rotate(360deg);
  transform: rotate(360deg);
}
#menu.active span:nth-of-type(1) {
  -webkit-transform: translateY(20px) rotate(-45deg);
  transform: translateY(20px) rotate(-45deg);
}
#menu.active span:nth-of-type(2) {
  -webkit-transform: translateY(0) rotate(45deg);
  transform: translateY(0) rotate(45deg);
}
#menu.active span:nth-of-type(3) {
  opacity: 0;
}
#menu_list , #hide_tab{
   position: absolute;
   top: 1032px;
   bottom: 0;
   width: 200px;
   right: -500px;
   height: 100%;
   -webkit-transform: translate(0px, 0px);
  -moz-transform: translate(0px, 0px);
  -o-transform: translate(0px, 0px);
  -ms-transform: translate(0px, 0px);
  transform: translate(0px, 0px);
  -webkit-transition: 0.30s ease;
  -moz-transition: 0.30s ease;
  -o-transition: 0.30s ease;
  transition: 0.30s ease;
  background-color:#FFFFF4;
}

 #menu_list.active , #hide_tab.active{
  -webkit-transform: translate(-500px, 0px);
  -moz-transform: translate(-500px, 0px);
  -o-transform: translate(-500px, 0px);
  -ms-transform: translate(-500px, 0px);
  transform: translate(-500px, 0px);
}

#menu_list ul.mobile-nav > li > p {
    height:100%;
    margin:0;
    text-align:center;
  background: #4F7389;
  color: #FFFFFF;
  font-size: 24px;
}
.mobile-nav ul.sub-menu {
  text-transform: uppercase;
}
.mobile-nav button {
  display: block;
  color: #777779;
  width:100%;
  padding: 15px 30px;
  border-top: 1px solid #4F7389;
  text-decoration: none;

}

.mobile-nav button:hover{
    background: #4F7389;
    color: #FFFFFF;
}
#menu_list.active {
  overflow-x: hidden;
}
video {
    width:100%;
    height:auto;
}
/* .btn{
    color: #444;
    border-radius: 4px;
    text-decoration: none;
    padding: 1em 2em;
    font-size: 0.7em;
    width: 10em;
    margin-right:10px;
    text-align: center;
      white-space: nowrap;
  overflow: hidden;
  text-overflow: ellipsis;
} */
.btn_link {
    color: white;
    border-radius: 4px;
    text-decoration: none;
    padding: 6px 12px;
    font-size: 10px;
    width: 10em;
    margin-right:10px;
    text-align: center;
      white-space: nowrap;
  overflow: hidden;
  text-overflow: ellipsis;
}
.btn-facebook { background-color: #25355F; }
.btn-twitter { background-color: #1688DF; }
.btn-line { background-color: #118000; }
.btn-youtube {
    background-color: red;
    border:1px solid red;
    &.active {
        background-color:white;
        color:red;
    }
}
.btn-video {
    background-color:black;
    border:1px solid black;
    &.active {
        background-color:white;
        color:black;
    }
}
#tab_title {
    display:flex;
    height:100%;
    align-items:center;
}
.tab_main {
    display:flex;
    align-items:center;
}
.tab {

    width:15em;
    font-size:1em;
    color:#444;
            text-align: center;
      white-space: nowrap;
  overflow: hidden;
  text-overflow: ellipsis;
      border-left:5px solid #bbd4fb;
    border-radius:2px;
    &.active {
        background-color:#fff;
        pointer-events: none;
    }
}
.tab:hover {
    background-color:#a8c7fa;
}
.tab_rm {
    font-size:1em;
    margin-left:auto;
    margin-right:0.5em;
    border-radius:1em;
    height:100%;
    background-color:#fff;
}
#protrude_tab span{
    display:flex;
    font-size:1em;
    margin-left:auto;
    padding: 0.2em;  
    margin-right:0.5em;
    border-radius:1em;
    background-color:#fff;
}
#protrude_tab span:hover{
    background-color:#a8c7fa;
}

</style>
<script src="https://code.jquery.com/jquery-3.4.1.min.js"></script>
<script src="https://kit.fontawesome.com/16eab4fef0.js" crossorigin="anonymous"></script>


<p id="error" style="display:none;"></p>

<% if !@test.nil? %>
<%= @test %>
<% end %>

<!--TODO:待機時間をpostで送信したら送信した後に@file_pathが空になったりすることとかない野郎からする-->
<% if !@selects.nil? %>
<% @selects.each do |selects| %>
<%= selects.html_safe %>
<% end %>
<% end %>


<!--ボタンとか上に持ってきたからスクリーンショット現在のブラウザの通りじゃなくなったけどそれは後々ボタンの分だけ引いたりして調整する-->
<div id="browser" class="my-2 mx-5">
    <div class="flex items-center justify-center h-10 sm:h-20">
        <button id="createButton" class="browser-btn btn-circle text-xs mx-0 sm:mx-1 w-9 sm:w-11 h-9 sm:h-11">Go</button>

        <%= button_to "/browser/prev",:class => "browser-btn btn-circle mx-0 sm:mx-1 w-9 sm:w-11 h-9 sm:h-11",:id => "arrow", :method => :get do %>
        <svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor" class="w-10 sm:w-10 h-10 sm:h-10">
            <path stroke-linecap="round" stroke-linejoin="round" d="M10.5 19.5 3 12m0 0 7.5-7.5M3 12h18" />
        </svg>        
        <% end %>

        <%= button_to "/browser/next",:class => "browser-btn btn-circle mx-0 sm:mx-1 w-9 sm:w-11 h-9 sm:h-11",:id => "arrow",:method => :get do %>
        <svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor" class="w-10 sm:w-10 h-10 sm:h-10">
            <path stroke-linecap="round" stroke-linejoin="round" d="M13.5 4.5 21 12m0 0-7.5 7.5M21 12H3" />
        </svg>
        <% end %>

        <%= button_to "/browser/screen-shot",:class => "browser-btn btn-circle sm:mx-1 w-9 sm:w-11 h-9 sm:h-11", :method => :get do %>
            <svg class="w-10 sm:w-10 h-10 sm:h-10 text-gray-500"  viewBox="0 0 24 24"  fill="none"  stroke="currentColor"  stroke-width="2"  stroke-linecap="round"  stroke-linejoin="round">  <polyline points="23 4 23 10 17 10" />  <path d="M20.49 15a9 9 0 1 1-2.12-9.36L23 10" /></svg>
        <% end %>

        <%# <input type="text" name="url" id="url" placeholder="URLを入力し、送信をクリックしてください" onfocus="this.select();"> %>
        <%= form_tag('/browser/access',:method => :psot,:class => "w-full mx- join-item") do %>
            <label for="default-search" class="mb-2 text-sm font-medium text-gray-900 sr-only dark:text-white">Search</label>
            <div class="relative">
                <div class="absolute inset-y-0 start-0 flex items-center ps-3 pointer-events-none">
                    <svg class="w-4 h-4 text-gray-500 dark:text-gray-400" aria-hidden="true" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 20 20">
                        <path stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="m19 19-4-4m0-7A7 7 0 1 1 1 8a7 7 0 0 1 14 0Z"/>
                    </svg>
                </div>
                <input type="search" name="url" id="url" class="block w-full p-3 ps-10 text-sm text-gray-900 border border-gray-300 rounded-lg bg-gray-50 focus:ring-blue-500 focus:border-blue-500 dark:bg-gray-700 dark:border-gray-600 dark:placeholder-gray-400 dark:text-white dark:focus:ring-blue-500 dark:focus:border-blue-500" placeholder="URL" required />
                <button class="text-white absolute end-2.5 bottom-2.5 bg-blue-700 hover:bg-blue-800 focus:ring-4 focus:outline-none focus:ring-blue-300 font-medium rounded-lg text-sm px-3 py-1 dark:bg-blue-600 dark:hover:bg-blue-700 dark:focus:ring-blue-800">検索</button>
            </div>
        <% end %>

        <%# <input type="text" placeholder="Type here" class="join-item input input-bordered input-info w-full max-w-xs" /> %>

        <%# <label class="w-10">テキスト：<input type="text" name="text" id="text" placeholder="Type here" class="btn join-item input input-bordered w-5 max-w-xs" /></label> %>
        <textarea placeholder="入力テキスト" name="text" id="text" class="textarea textarea-bordered textarea-xs join-item w-half max-w-xs" ></textarea>
        
        <label id="sleep" class="form-control w-1/6 max-w-xs join-item">
            <div class="label">
                <span class="label-text text-xs">now:<%= @sleep %></span>
        <%= form_tag('/browser/sleep', method: :post) do %>
                <button type="submit" class="label-text-alt bg-blue-500 hover:bg-blue-700 text-white font-bold rounded-full">
                <svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor" class="w-6 h-6">
                    <path stroke-linecap="round" stroke-linejoin="round" d="m12.75 15 3-3m0 0-3-3m3 3h-7.5M21 12a9 9 0 1 1-18 0 9 9 0 0 1 18 0Z" />
                </svg>
                </button>
            </div>


            <select name="sleep" class="select select-bordered select-xs">
                <option disabled selected>待機時間</option>
                <option value="0.1">0.1</option>
                <option value="0.5">0.5</option>
                <option value="1">1</option>
                <option value="2">2</option>
                <option value="5">5</option>
                <option value="10">10</option>
            </select>
        </label>
        <% end %>

        <!--
        <p class="item" style="margin-left:1em;">待機時間:<%= @sleep %></p>
        <%= form_tag('/browser/sleep', method: :post) do %>
            <input type="text" name="sleep" id="sleep" onkeyup="checkSleep()">
            <input type="submit" class="submit" value="待機時間を設定">
        <% end %>
        -->

        <section>
            <div class="btn-trigger" id="menu">
                <span></span>
                <span></span>
                <span></span>
            </div>
        </section>
    </div>
    <div id="tab">
        <div id="tab_title">
            <% if !@tab_titles.nil? && @tab_titles.size > 0 && @tab_titles[0].length > 0 %>
                <% i = 0 %>
                <% @tab_titles.each do |title| %>
                    <% class_name = i == @tab_index ? "tab active" : "tab" %>
                    <div class="tab_main">
                    <%= form_tag("/browser/tab-move",method: :get) do %>
                    <input type="hidden" name="index" value="<%= i %>">
                    <button type="submit" class="<%= class_name %>"><%= title %></button>
                    <% end %>
                    <%= button_to "×", "/browser/tab-rm",:class => "tab_rm",:method => :get,params: {index: i} %>
                    </div>
                    <% i += 1 %>
                <% end %>
                <%= button_to "＋","/browser/tab-create",:class => "tab_create",:method => :get %>
            <% end %>
        </div>
        <div id="videos" >
            <% if !@video_path.nil? && @video_path.size > 0 %>
                <% @video_path.each do |video| %>
                    <% if video.keys.first == "youtube" %>
                        <button id="video_button" class="btn_link btn-youtube"><span class="fab fa-youtube fa-fw"></span><%= video["title"] %></button>
                        <div id="video" class="z-[1000] none">
                                <video controls name="media">
                                    <source  src="<%= video["youtube"][6..] %>" type="video/mp4">
                                </video>
                        </div>
                    <% else %>
                        <button id="video_button" class="btn_link btn-video"><span class="fas fa-video"></span><%= video["title"] %></button>
                        <div id="video" class="z-1000">
                            <%= video["video"].html_safe %>
                        </div>
                    <% end %>
                <% end %>
            <% end %>
        </div>

        <div id="protrude_tab" style="display:none">
            <span>...</span>
        </div>
    </div>
    <% if @file_path.nil? %>
    <% @file_path = "default" %>
    <% end %>
    <div id="imgbox" class="relative" >

        <p id="now_scrollup" class="scroll"></p>
        <div class="up h-[1000px]"></div>
        <div id="innerimg" class="relative  inset-x-0">
            <span id="now_scrollup"></span>
            <img src="/images/<%= @file_path %>.png" alt="page" id="img">
            <span id="now_scrolldown"></span>
        </div>
        <div class="down h-[2000px]" ></div>
        <div id="hide_tab"></div>
        <nav id="menu_list">
        <ul class="mobile-nav" id="mobile">
            <%= button_to "tor","/browser/tor-create",:method => :get %>
            <li class="menu-item menu-item-has-children">
            <p>基本操作</p>
                <ul class="sub-menu">
                    <li class="menu_item">
                        <button id="holdButton" style="position:relative"><span class="pointer" id="one_hold">1</span>から<span class="pointer" id="two_hold">2</span>までをクリック&ホールド</button>
                    </li>
                    <li class="menu_item">
                        <%= button_to "selectタグ取得","/browser/select",:method => :get %>
                    </li>
                </ul>              
            </li>
            <li class="menu-item menu-item-has-children">
            <p>動画</p>
                <ul class="sub-menu">
                    <li class="menu_item">
                        <%= button_to "ページ内の動画","/browser/video",:method => :get %>
                    </li>
                    <li class="menu_item">
                        <%= button_to "YouTube","/browser/youtube-video",:method => :get %>
                    </li>

                </ul>
            </li>
        </ul>
        </nav>

        <div class="pointer" id="one" style="display:none;">1</div>
        <div class="pointer" id="two" style="display:none;">2</div>
    </div>
</div>

<!--
<% content_for :js do %>
    <%= javascript_import_module_tag "custom/main" %>
    <% puts "実行しました" %>
<% end %>
-->

<script>


    var responsive_elements = ["arrow","text","sleep"]

    function getStyle(element_id,style_name){
        let element = document.getElementById(element_id);
        let style = window.getComputedStyle(element);
        let value = style.getPropertyValue(style_name);
        return value;
    }

    //sleep整数チェック
    function checkSleep() {
        let sleep = document.getElementById("sleep").value;
        let regex = /^([+-]?\d+)(?:\.\d+)?$/;
        if (regex.test(sleep)){
            let error = document.getElementById("error");
            error.innerText = "";
            error.style.display = "none";
        }else{
            var error = document.getElementById("error");
            error.innerText = "待機時間には実数を必ず入力してください";
            error.style.display = "block";
        }
    }

    //何番目のビデオボタンが押されたか

    function butotnClick(){
        let textbox = document.getElementById('url');
        let value = textbox.value;
        let url = encodeURIComponent(value);

        window.location.href = "/browser/" + url;
    }

    function createBrowser() {
        console.log("hi");
        let width = document.getElementById("imgbox").clientWidth;
        let height = document.getElementById("imgbox").clientHeight;
        window.location.href = "/browser/create?width=" + width + "&height=" + height;
    }

    function clickAndHold() {
        let one_hold_value = getStyle("one","display");
        let two_hold_value = getStyle("two","display");
        let one_x = getStyle("one","left").replace("px","");
        let one_y = getStyle("one","top").replace("px","");
        let two_x = getStyle("two","left").replace("px","");
        let two_y = getStyle("two","top").replace("px","");

        if(one_hold_value == "block" && two_hold_value == "block"){
            window.location.href = "/browser/click-hold/" + one_x + "/" + one_y + "/" + two_x + "/" + two_y;
        }
    }

    function blockYoutube() {
        let youtube = document.getElementById("video");
        if (getStyle("video","display") == "none"){
            youtube.style.display = "block"
        }else{
            youtube.style.display = "none"
        }
    }


    // var urlSubmitButton = document.getElementById('submitButton');
    // urlSubmitButton.addEventListener('click', butotnClick);

    var createButton = document.getElementById("createButton");
    createButton.addEventListener("click", createBrowser);

    var holdButton = document.getElementById("holdButton");
    holdButton.addEventListener("click",clickAndHold);

    // var videoButton = document.getElementById("video_button");#mount_0_0_kx > div > div > div.x9f619.x1n2onr6.x1ja2u2z > div > div > div.x78zum5.xdt5ytf.x1t2pt76.x1n2onr6.x1ja2u2z.x10cihs4 > section > main > div._aa6b._ad9f._aa6d > div._aa6e > article > div > div.x9f619.xjbqb8w.x78zum5.x168nmei.x13lgxp2.x5pf9jr.xo71vjh.x1n2onr6.x1plvlek.xryxfnj.x1c4vz4f.x2lah0s.xdt5ytf.xqjyukv.x1qjc9v5.x1oa3qoh.x1nhvcw1 > div > div > div._ae5q._akdn > ul > div:nth-child(3) > div > div > div:nth-child(3) > ul > div > li > div > div > div._a9zr > div._a9zs > span
    // videoButton.addEventListener("click",blockYoutube);
    var box_videos = document.querySelectorAll("#video");
                var imgbox = document.getElementById("imgbox");

    box_videos.forEach((video) => {
        imgbox.insertBefore(video,imgbox.firstChild);
    });


            var elms = document.querySelectorAll('#video_button');
    var index;// クリックした要素のインデックスを格納する変数
    elms.forEach((elm) => {// elementsを持つ要素すべてに以下の処理を追加する
    elm.addEventListener("click", () => {// クリックしたときに
        index = [].slice.call(elms).indexOf(elm);// インデックスを変数indexへ格納する
        console.log('順番',index);//変数「i」に順番が入っている（0スタート）
        let path = `#imgbox > div:nth-child(${index + 1})`;
        console.log(path);
        let action_video = document.querySelector(path);
        action_video.classList.toggle("block");
        path = `#videos > button:nth-child(${index + 1})`;
        let button = document.querySelector(path);
        button.classList.toggle("active");
    });
    });




    //画像クリックされた位置の座標送る-->

    document.getElementById( "img" ).addEventListener( "click", function( event ) {
    var click_x = event.pageX ;
    var click_y = event.pageY ;

    // 要素の位置を取得
    var client_rect = this.getBoundingClientRect() ;
    var position_x = client_rect.left + window.pageXOffset ;
    var position_y = client_rect.top + window.pageYOffset ;

    // 要素内におけるクリック位置を計算
    var x = Math.round(click_x - position_x );
    var y = Math.round(click_y - position_y );

    // 入力するテキストがあるかどうか確認
    var input_text = document.getElementById("text").value;
    if (input_text){
        window.location.href = "/browser/" + x + "/" + y + "/" + input_text;

    } else {
        window.location.href = "/browser/" + x + "/" + y;
    }


} ) ;

//スクロール検知-->

//厳密にはマウスホイール検知
//いちいち止まらなあかんのだるいから、スクロールした回数をpxに変換してその分一気にスクロールする
// window.onmousewheel = function(){
//     if(event.wheelDelta > 0){
//         window.location.href = "/browser/scrollup";
//     }else{
//         window.location.href = "/browser/scrolldown";
//     }
// }
var box = document.getElementById("imgbox");

var innerimg = document.getElementById("img");
innerimg.style.height = box.clientHeight + "px";



function noscroll(e){
e.preventDefault();
}
box.onscroll = function() {
    scroll = $(this).scrollTop() - 1032;
    console.log("sdfs"+scroll);
    if(scroll >= 0){
        document.getElementById("now_scrollup").innerText = "";
        document.getElementById("now_scrolldown").innerText = scroll;
    }else{
        document.getElementById("now_scrolldown").innerText = "";
        document.getElementById("now_scrollup").innerText = scroll;
    }
}
box.onscrollend = (event) => {
    console.log("aaadfg"+scroll);
    if(Math.abs(scroll) >= 100){
        window.location.href = "/browser/scroll/" + scroll;
        scroll_flag = 1;
        console.log(scroll_flag);
    }
};


// window.onload = function() {
//     sleep(100);
//     init_scroll();
// }
console.log("test12345");
if(scroll_flag == 1){console.log("aa");init_scroll();}

var scroll = 0;
var scroll_flag = 0;
    var a = document.getElementById("img").getBoundingClientRect().top;
    console.log("sd"+a);
    var elm = document.getElementById("imgbox");
    console.log("ssss");
    elm.scrollTop = 1032;
    console.log("ffff");

function init_scroll() {
    var a = document.getElementById("img").getBoundingClientRect().top;
    console.log("sd"+a);
    var elm = document.getElementById("imgbox");
    console.log("ssss");
    elm.scrollTop = 1032;
    console.log("ffff");
}
//特定の文字を押された際に特定の動作をする-->

var keyArr = []
var img_mouse_flag = false;
var hold_count = 0;

var hold_x = 0;
var hold_y = 0;

function onKeyDown(e) {
    console.log(e);
    if(String(e.code) == "Backspace" && hold_count != 0 && img_mouse_flag == true){
        var id = hold_count == 2 ? "one" : "two";
        var element = document.getElementById(id);
        element.style.display = "none";
        var element_hold = document.getElementById(id + "_hold");
        element_hold.style.opacity = 0.5;
        hold_count = id == "one" ? 1 : 2; //3回とか押したら２だけが表示されるようなことが起きるけど動いたらヨシ!!
    }
    if(String(e.code) == "KeyM" && img_mouse_flag == true ){


        if(hold_count <= 1){
            var one = document.getElementById("one");
            one.style.display = "block";
            one.style.position = "absolute";
            one.style.left = hold_x + "px";
            one.style.top = hold_y + "px";
            var one_hold = document.getElementById("one_hold");
            one_hold.style.opacity = 1;
            hold_count += 2;
            console.log(hold_count);
        }else{
            var two = document.getElementById("two");
            two.style.display = "block";
            two.style.position = "absolute";
            two.style.left = hold_x + "px";
            two.style.top = hold_y + "px";
            var two_hold = document.getElementById("two_hold");
            two_hold.style.opacity = 1;
            hold_count = 1;
        }
    }
    keyArr.push(e.code)
    if (keyArr.length > 10) {
        keyArr.shift()
    }
    var konamiCommand = [
        'ArrowUp',
        'ArrowUp',
        'ArrowDown',
        'ArrowDown',
        'ArrowLeft',
        'ArrowRight',
        'ArrowLeft',
        'ArrowRight',
        'KeyB',
        'KeyA',
    ]
    console.log(keyArr)

    if (String(keyArr) === String(konamiCommand)) {
        console.log("できた！")
    }
}
console.log("hello");
// img = document.getElementById("img");
document.addEventListener('keydown', onKeyDown);

document.onmousemove = onmousemove;
onmousemove = function(e) {
    var click_x = event.pageX ;
    var click_y = event.pageY ;

    // 要素の位置を取得
    var client_rect = document.getElementById("img").getBoundingClientRect() ;
    var position_x = client_rect.left + window.pageXOffset ;
    var position_y = client_rect.top + window.pageYOffset ;

    // 要素内におけるクリック位置を計算
    hold_x = click_x - position_x ;
    hold_y = click_y - position_y ;
}

//マスポインタがimg上にあるかどうか
document.getElementById("img").addEventListener("mouseout",function(){
    img_mouse_flag = false;
    console.log("mouseout");
})
document.getElementById("img").addEventListener("mouseover",function(){
    img_mouse_flag = true;
    console.log("mouseover");
})



$(function(){
    $('.btn-trigger').on('click', function() {
        $(this).toggleClass('active');
        $("#menu_list").toggleClass("active");
        return false;
    });
    $("#protrude_tab").on("click",function() {
        $(this).toggleClass('active');
        $("#hide_tab").toggleClass("active");
        return false;
    })
});


function responsive(){
    if (window.innerWidth <= 640){
        responsive_elements.map(el => document.getElementById(el).classList.add("responsive_hide","none"));
    }else{
        if (document.getElementById(responsive_elements[0]).classList.contains("responsive_hide")) {
            responsive_elements.map(el => document.getElementById(el).classList.remove("responsive_hide","none"));
            clone_els = document.querySelectorAll("#cloned");
            clone_els.map(el => el.remove());
        }
    }
    console.log("mictest 3456");
    var hide_elements = document.getElementsByClassName("responsive_hide");
    for ( var i = 0, len = hide_elements.length; i < len; i++ ){
        console.log("mictest 12");
        var menu = document.getElementById("menu_list");
        var hide_element = document.getElementById(hide_elements[i]).cloneNode(true);//矢印のid arrowで二つともやからそれでありもしない？みたいな？
        hide_element.id = "cloned";
        menu.insertBefore(hide_element,menu.firstChild);
    }
}

window.addEventListener('resize',responsive);


//     var menu = document.getElementById("menu");
// var active_menu = menu.className;
// console.log(active_menu);
// if (active_menu.includes("active")){
//     var menu_list = document.getElementById("menu_list");
//     menu_list.style.display = "block";
// }

//はみ出てるボタン検知-->
document.addEventListener('turbolinks:load', function() {
  console.log('turbolinks:load');
});


function tab_protrude(allEls) {
    var tab_width = document.getElementById("tab").getBoundingClientRect().right;
    var i = 0;
    var end = 0;

    for(var j = 0; j < allEls.length;j++){
        i += 1;
        var right = allEls[j].getBoundingClientRect().right;
        console.log(right);
        if(right + 15 > tab_width) {
            console.log(right);
            console.log(tab_width);
            console.log(i + "ccc");
            console.log("slkrjghslkjghserhys");
            end = i;
            return i;
            
        }
    };
    return false;
}

function create_protrude_button(i,isTab = false) {
    document.getElementById("protrude_tab").style.display = "block";
    var hide_tab = document.getElementById("hide_tab");
    if(isTab == true){        
        var tabMainElements = document.querySelectorAll(".tab_main");
        var tabMainCount = tabMainElements.length;
        for(j = i-1;j < tabMainCount;j++){
            console.log(j + "aaa") ;
            hide_tab.appendChild(tabMainElements[j]);
        }
        var videoElements = document.querySelectorAll("#video_button");
        videoElements.forEach((elm) => {
            hide_tab.appendChild(elm);
        })
    }else{
        var videoElements = document.querySelectorAll("#video_button");
        var videoCount = videoElements.length;
        for(j = i;j < tabMainCount;j++){
            hide_tab.appendChild(videoElements[j]);
        }
    }
}

function main_tab_check() {
    var element = document.querySelector(".tab_create").getBoundingClientRect().right;
    var tab_width = document.getElementById("tab").getBoundingClientRect().right;
    if ( element + 15 > tab_width ){
        var allEls = document.querySelectorAll(".tab_rm");
        var tab_r = tab_protrude(allEls);
        console.log(tab_r + "ddd");
        if (tab_r == false){
            return 1;
        }else{
            return tab_r;
        }
    }else{
        return 0;
    }
}

if (document.querySelector(".btn") != null){//ビデオボタンがあるか
    var allEls = document.querySelectorAll('.btn');
    var r = tab_protrude(allEls);
    if ( r != false ){//ビデオボタンがはみ出てる
        var result = main_tab_check();
        if(result == 0){
            create_protrude_button(r,isTab=false);
        }else if(result == 1){
            create_protrude_button(1,isTab=true);
        }else{
            create_protrude_button(result,isTab=true);
        }
    }
}else{
    var result = main_tab_check();
    console.log(result + "bbb");
        if(result == 0){
            
        }else if(result == 1){
            create_protrude_button(1,isTab=true);
            console.log(result + "bbb");

        }else{
            create_protrude_button(result,isTab=true);
        }
}
    var widths = 0;



</script>